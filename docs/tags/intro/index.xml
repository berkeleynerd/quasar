<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> – intro</title>
    <link>https://slashgeek.org/quasar/tags/intro/</link>
    <description>Recent content in intro on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 04 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://slashgeek.org/quasar/tags/intro/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Getting Started: Getting Started</title>
      <link>https://slashgeek.org/quasar/getting-started/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://slashgeek.org/quasar/getting-started/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Information in this section helps your user try your project themselves.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What do your users need to do to start using your project? This could include downloading/installation instructions, including any prerequisites or system requirements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introductory “Hello World” example, if appropriate. More complex tutorials should live in the Tutorials section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Consider using the headings below for your getting started page. You can delete any that are not applicable to your project.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Are there any system requirements for using your project? What languages are supported (if any)? Do users need to already have any software or tools installed?&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Where can your user find your project code? How can they install it (binaries, installable package, build from source)? Are there multiple options/versions they can install and how should they choose the right one for them?&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;p&gt;Is there any initial setup users need to do after installation to try your project?&lt;/p&gt;
&lt;h2 id=&#34;try-it-out&#34;&gt;Try it out!&lt;/h2&gt;
&lt;p&gt;Can your users test their installation, for example by running a commmand or deploying a Hello World example?&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Concepts: Concepts</title>
      <link>https://slashgeek.org/quasar/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://slashgeek.org/quasar/concepts/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;For many projects, users may not need much information beyond the information in the &lt;a href=&#34;https://slashgeek.org/quasar/docs/overview/&#34;&gt;Overview&lt;/a&gt;, so this section is &lt;strong&gt;optional&lt;/strong&gt;. However if there are areas where your users will need a more detailed understanding of a given term or feature in order to do anything useful with your project (or to not make mistakes when using it) put that information in this section. For example, you may want to add some conceptual pages if you have a large project with many components and a complex architecture.&lt;/p&gt;
&lt;p&gt;Remember to focus on what the user needs to know, not just what you think is interesting about your project! If they don’t need to understand your original design decisions to use or contribute to the project, don’t put them in, or include your design docs in your repo and link to them. Similarly, most users will probably need to know more about how features work when in use rather than how they are implemented. Consider a separate architecture page for more detailed implementation and system design information that potential project contributors can consult.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Tutorials: Tutorials</title>
      <link>https://slashgeek.org/quasar/tutorials/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://slashgeek.org/quasar/tutorials/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Tutorials are &lt;strong&gt;complete worked examples&lt;/strong&gt; made up of &lt;strong&gt;multiple tasks&lt;/strong&gt; that guide the user through a relatively simple but realistic scenario: building an application that uses some of your project’s features, for example. If you have already created some Examples for your project you can base Tutorials on them. This section is &lt;strong&gt;optional&lt;/strong&gt;. However, remember that although you may not need this section at first, having tutorials can be useful to help your users engage with your example code, especially if there are aspects that need more explanation than you can easily provide in code comments.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Reference: Reference</title>
      <link>https://slashgeek.org/quasar/reference/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://slashgeek.org/quasar/reference/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;If your project has an API, configuration, or other reference - anything that users need to look up that’s at an even lower level than a single task - put (or link to it) here. You can serve and link to generated reference docs created using Doxygen,
Javadoc, or other doc generation tools by putting them in your &lt;code&gt;static/&lt;/code&gt; directory. Find out more in &lt;a href=&#34;https://docsy.dev/docs/adding-content/content/#adding-static-content&#34;&gt;Adding static content&lt;/a&gt;. For OpenAPI reference, Docsy also provides a &lt;a href=&#34;https://www.docsy.dev/docs/adding-content/shortcodes/#swaggerui&#34;&gt;Swagger UI layout and shortcode&lt;/a&gt; that renders &lt;a href=&#34;https://swagger.io/tools/swagger-ui/&#34;&gt;Swagger UI&lt;/a&gt; using any OpenAPI YAML or JSON file as source.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>: Introduction</title>
      <link>https://slashgeek.org/quasar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://slashgeek.org/quasar/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;a gentle introduction to development using quasar&amp;rsquo;s domain service patterns and tooling&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;EVE&amp;rsquo;s thoroughly modern domain service architecture is now feature complete so there has never been a better time to &lt;a href=&#34;https://wiki.ccpgames.com/display/~kristinn/2017/07/04/Life+Outside+of+the+Monolith&#34;&gt;transcend the monolith&lt;/a&gt; and help make the dream of &lt;a href=&#34;https://wiki.ccpgames.com/display/CCP/2020/06/15/CEOBlog2020w24+-+EVE+Forever&#34;&gt;EVE Forever&lt;/a&gt; a reality.&lt;/p&gt;
&lt;p&gt;From the perspective of even a seasoned EVE developer, however, there are &lt;em&gt;&lt;strong&gt;a lot&lt;/strong&gt;&lt;/em&gt; of new technologies and concepts you need to be familiar with to effectively contribute to this effort. Furthermore, it&amp;rsquo;s hard to know exactly where to start on this journey and how to stay on the optimal path through the multitude of confluence pages, READMEs, FAQs, blog posts, and third-party documentation you encounter along the way.&lt;/p&gt;
&lt;p&gt;In this guide we attempt to provide just such a starting point for developers new to CCP&amp;rsquo;s domain service architecture and its long list of technologies. Our goal is to help you navigate step-by-step past each technological challenge, summarize the essential knowledge you need to keep going, and point out important internal and external resources you will want to circle back to later once you are well on your way to delivering real business and gameplay value for both CCP and its players alike.&lt;/p&gt;
&lt;h2 id=&#34;setting-expectations&#34;&gt;Setting expectations&lt;/h2&gt;
&lt;p&gt;Like many other teams at CCP, TechCo maintains an official &lt;a href=&#34;https://wiki.ccpgames.com/display/TECHCO/Working+agreement+with+teams+collaborating+with+Team+Tech-Co&#34;&gt;working agreement&lt;/a&gt; designed to facilitate a positive and productive working relationship between its staff and other developers throughout the company. &lt;strong&gt;This is an important document&lt;/strong&gt; and you should read it in its entirety and bookmark it to refer to later. In fact, many of the topics we will consider in this guide are sourced directly from the working agreement and expanded on to add clarity, detail, and substance.&lt;/p&gt;
&lt;h2 id=&#34;where-to-find-help&#34;&gt;Where to find help&lt;/h2&gt;
&lt;p&gt;If you have questions or run into issues while following along with this guide feel free to ask us for help on Slack. Google and Stack Overflow are surprisingly good resources, as always, but sometimes miss the mark &amp;hellip; when this happens we are here to help!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For questions about the Go language, tooling, and ecosystem in general reach out for help in the &lt;a href=&#34;https://ccpgames.slack.com/messages/golang/&#34;&gt;#golang&lt;/a&gt; channel.&lt;/li&gt;
&lt;li&gt;For questions about how to design amazing, bullet-proof protobuf definitions ask for a review in the &lt;a href=&#34;https://ccpgames.slack.com/messages/eve-proto/&#34;&gt;#eve-proto&lt;/a&gt; channel.&lt;/li&gt;
&lt;li&gt;For all other questions either drop by our desks or chat with us in the &lt;a href=&#34;https://ccpgames.slack.com/messages/eve-services/&#34;&gt;#eve-services&lt;/a&gt; channel.&lt;/li&gt;
&lt;li&gt;If you run into a blocker you can ping our help desk at &lt;strong&gt;@ttc-help&lt;/strong&gt; - whoever is on-call should be able to answer your question or put you in touch with the right resource to help get your issue resolved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% hint style=&amp;ldquo;info&amp;rdquo; %}
Roman&amp;rsquo;s excellent &lt;a href=&#34;https://wiki.ccpgames.com/pages/viewpage.action?pageId=160078718&#34;&gt;Eve Service FAQ&lt;/a&gt; is an absolutely essential read. Once you are ready to develop a service it will be an indispensable resource!
{% endhint %}&lt;/p&gt;
&lt;h2 id=&#34;a-look-ahead&#34;&gt;A look ahead&lt;/h2&gt;
&lt;p&gt;We use &lt;em&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/em&gt; to write code and tests, &lt;em&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/em&gt; to handle version control, and &lt;em&gt;&lt;strong&gt;Test Driven Design&lt;/strong&gt;&lt;/em&gt; as our overarching methodology. Combined with judicious use of the &lt;em&gt;&lt;strong&gt;command line&lt;/strong&gt;&lt;/em&gt; this suite of technologies has allowed us to rapidly and reliably deliver new features while staying &amp;ldquo;in the flow.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;In the next few sections we briefly introduce you to each of these technologies after which we provide a comprehensive tutorial to help you learn &lt;em&gt;just enough&lt;/em&gt; of each to kick start your development efforts. After completing this tutorial you will also be better prepared to tackle more advanced Go language learning &lt;a href=&#34;https://www.gopl.io&#34;&gt;resources&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
